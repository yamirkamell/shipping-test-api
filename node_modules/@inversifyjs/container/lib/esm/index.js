import"reflect-metadata";import{getOwnReflectMetadata as i,setReflectMetadata as e,updateOwnReflectMetadata as t}from"@inversifyjs/reflect-metadata-utils";import{LazyServiceIdentifier as n,isPromise as s,stringifyServiceIdentifier as a}from"@inversifyjs/common";import{getClassMetadata as r,bindingTypeValues as o,bindingScopeValues as c,ResolvedValueElementMetadataKind as d,PlanResultCacheService as l,ActivationsService as u,BindingService as h,DeactivationsService as v,resolveServiceDeactivations as g,resolveModuleDeactivations as b,plan as S,resolve as p,resolveBindingsDeactivations as f}from"@inversifyjs/core";const m="@inversifyjs/container/bindingId";class y{#i;#e;constructor(n){this.#i=function(){const n=i(Object,m)??0;return n===Number.MAX_SAFE_INTEGER?e(Object,m,Number.MIN_SAFE_INTEGER):t(Object,m,(()=>n),(i=>i+1)),n}(),this.#e=n}get id(){return this.#i}async load(i){await this.#e(i)}}const w=Symbol.for("@inversifyjs/container/bindingIdentifier");class I{static always=i=>!0}const A="@inversifyjs/container/bindingId";function P(){const n=i(Object,A)??0;return n===Number.MAX_SAFE_INTEGER?e(Object,A,Number.MIN_SAFE_INTEGER):t(Object,A,(()=>n),(i=>i+1)),n}function R(i){return{[w]:!0,id:i.id}}function B(i){return e=>{for(let t=e.getAncestor();void 0!==t;t=t.getAncestor())if(i(t))return!0;return!1}}function C(i){return e=>e.name===i}function M(i){return e=>e.serviceIdentifier===i}function N(i,e){return t=>t.tags.has(i)&&t.tags.get(i)===e}function x(i){return void 0===i.name&&0===i.tags.size}function O(i){const e=B(i);return i=>!e(i)}function F(i){return e=>{const t=e.getAncestor();return void 0===t||!i(t)}}function j(i){return e=>{const t=e.getAncestor();return void 0!==t&&i(t)}}class k{#t;constructor(i){this.#t=i}getIdentifier(){return R(this.#t)}inRequestScope(){return this.#t.scope=c.Request,new V(this.#t)}inSingletonScope(){return this.#t.scope=c.Singleton,new V(this.#t)}inTransientScope(){return this.#t.scope=c.Transient,new V(this.#t)}}class D{#n;#s;#a;#r;constructor(i,e,t,n){this.#n=i,this.#s=e,this.#a=t,this.#r=n}to(i){const e=r(i),t={cache:{isRight:!1,value:void 0},id:P(),implementationType:i,isSatisfiedBy:I.always,moduleId:this.#s,onActivation:void 0,onDeactivation:void 0,scope:e.scope??this.#a,serviceIdentifier:this.#r,type:o.Instance};return this.#n(t),new _(t)}toSelf(){if("function"!=typeof this.#r)throw new Error('"toSelf" function can only be applied when a newable function is used as service identifier');return this.to(this.#r)}toConstantValue(i){const e={cache:{isRight:!1,value:void 0},id:P(),isSatisfiedBy:I.always,moduleId:this.#s,onActivation:void 0,onDeactivation:void 0,scope:c.Singleton,serviceIdentifier:this.#r,type:o.ConstantValue,value:i};return this.#n(e),new V(e)}toDynamicValue(i){const e={cache:{isRight:!1,value:void 0},id:P(),isSatisfiedBy:I.always,moduleId:this.#s,onActivation:void 0,onDeactivation:void 0,scope:this.#a,serviceIdentifier:this.#r,type:o.DynamicValue,value:i};return this.#n(e),new _(e)}toResolvedValue(i,e){const t={cache:{isRight:!1,value:void 0},factory:i,id:P(),isSatisfiedBy:I.always,metadata:this.#o(e),moduleId:this.#s,onActivation:void 0,onDeactivation:void 0,scope:this.#a,serviceIdentifier:this.#r,type:o.ResolvedValue};return this.#n(t),new _(t)}toFactory(i){const e={cache:{isRight:!1,value:void 0},factory:i,id:P(),isSatisfiedBy:I.always,moduleId:this.#s,onActivation:void 0,onDeactivation:void 0,scope:c.Singleton,serviceIdentifier:this.#r,type:o.Factory};return this.#n(e),new V(e)}toProvider(i){const e={cache:{isRight:!1,value:void 0},id:P(),isSatisfiedBy:I.always,moduleId:this.#s,onActivation:void 0,onDeactivation:void 0,provider:i,scope:c.Singleton,serviceIdentifier:this.#r,type:o.Provider};return this.#n(e),new V(e)}toService(i){const e={id:P(),isSatisfiedBy:I.always,moduleId:this.#s,serviceIdentifier:this.#r,targetServiceIdentifier:i,type:o.ServiceRedirection};this.#n(e)}#o(i){return{arguments:(i??[]).map((i=>function(i){return"object"==typeof i&&!n.is(i)}(i)?{kind:!0===i.isMultiple?d.multipleInjection:d.singleInjection,name:i.name,optional:i.optional??!1,tags:new Map((i.tags??[]).map((i=>[i.key,i.value]))),value:i.serviceIdentifier}:{kind:d.singleInjection,name:void 0,optional:!1,tags:new Map,value:i}))}}}class E{#t;constructor(i){this.#t=i}getIdentifier(){return R(this.#t)}onActivation(i){return this.#t.onActivation=i,new T(this.#t)}onDeactivation(i){return this.#t.onDeactivation=i,new T(this.#t)}}class T{#t;constructor(i){this.#t=i}getIdentifier(){return R(this.#t)}when(i){return this.#t.isSatisfiedBy=i,new E(this.#t)}whenAnyAncestor(i){return this.when(B(i))}whenAnyAncestorIs(i){return this.when(B(M(i)))}whenAnyAncestorNamed(i){return this.when(function(i){return B(C(i))}(i))}whenAnyAncestorTagged(i,e){return this.when(function(i,e){return B(N(i,e))}(i,e))}whenDefault(){return this.when(x)}whenNamed(i){return this.when(C(i))}whenNoParent(i){return this.when(F(i))}whenNoParentIs(i){return this.when(F(M(i)))}whenNoParentNamed(i){return this.when(function(i){return F(C(i))}(i))}whenNoParentTagged(i,e){return this.when(function(i,e){return F(N(i,e))}(i,e))}whenParent(i){return this.when(j(i))}whenParentIs(i){return this.when(j(M(i)))}whenParentNamed(i){return this.when(function(i){return j(C(i))}(i))}whenParentTagged(i,e){return this.when(function(i,e){return j(N(i,e))}(i,e))}whenTagged(i,e){return this.when(N(i,e))}whenNoAncestor(i){return this.when(O(i))}whenNoAncestorIs(i){return this.when(O(M(i)))}whenNoAncestorNamed(i){return this.when(function(i){return O(C(i))}(i))}whenNoAncestorTagged(i,e){return this.when(function(i,e){return O(N(i,e))}(i,e))}}class V extends T{#c;constructor(i){super(i),this.#c=new E(i)}onActivation(i){return this.#c.onActivation(i)}onDeactivation(i){return this.#c.onDeactivation(i)}}class _ extends V{#d;constructor(i){super(i),this.#d=new k(i)}inRequestScope(){return this.#d.inRequestScope()}inSingletonScope(){return this.#d.inSingletonScope()}inTransientScope(){return this.#d.inTransientScope()}}const G=Symbol.for("@inversifyjs/container/InversifyContainerError");class q extends Error{[G];kind;constructor(i,e,t){super(e,t),this[G]=!0,this.kind=i}static is(i){return"object"==typeof i&&null!==i&&!0===i[G]}static isErrorOfKind(i,e){return q.is(i)&&i.kind===e}}var L;!function(i){i[i.invalidOperation=0]="invalidOperation"}(L||(L={}));const U=c.Transient;class X{#l;#u;#h;#v;#g;#b;#S;#p;#f;#m;#y;constructor(i){this.#h=this.#w(),this.#g=i=>this.#l.get(i),this.#p=new l,this.#f=this.#I(),void 0===i?.parent?(this.#l=u.build(void 0),this.#u=h.build(void 0),this.#v=v.build(void 0)):(this.#l=u.build(i.parent.#l),this.#u=h.build(i.parent.#u),this.#v=v.build(i.parent.#v),i.parent.#p.subscribe(this.#p)),this.#b=this.#u.get.bind(this.#u),this.#m=this.#A.bind(this),this.#S={autobind:i?.autobind??!1,defaultScope:i?.defaultScope??U},this.#y=[]}bind(i){return new D((i=>{this.#A(i)}),void 0,this.#S.defaultScope,i)}get(i,e){const t=this.#P(!1,i,e),n=this.#R(t);if(s(n))throw new q(L.invalidOperation,`Unexpected asyncronous service when resolving service "${a(i)}"`);return n}getAll(i,e){const t=this.#P(!0,i,e),n=this.#R(t);if(s(n))throw new q(L.invalidOperation,`Unexpected asyncronous service when resolving service "${a(i)}"`);return n}async getAllAsync(i,e){const t=this.#P(!0,i,e);return this.#R(t)}async getAsync(i,e){const t=this.#P(!1,i,e);return this.#R(t)}isBound(i,e){const t=this.#u.get(i);return this.#B(i,t,e)}isCurrentBound(i,e){const t=this.#u.getNonParentBindings(i);return this.#B(i,t,e)}async load(...i){await Promise.all(i.map((async i=>i.load(this.#C(i.id)))))}onActivation(i,e){this.#l.add(e,{serviceId:i})}onDeactivation(i,e){this.#v.add(e,{serviceId:i})}restore(){const i=this.#y.pop();if(void 0===i)throw new q(L.invalidOperation,"No snapshot available to restore");this.#l=i.activationService,this.#u=i.bindingService,this.#v=i.deactivationService,this.#M()}snapshot(){this.#y.push({activationService:this.#l.clone(),bindingService:this.#u.clone(),deactivationService:this.#v.clone()})}async unbind(i){var e;"object"==typeof(e=i)&&null!==e&&!0===e[w]?await this.#N(i):await this.#x(i)}async unbindAll(){const i=[...this.#u.getNonParentBoundServices()];await Promise.all(i.map((async i=>g(this.#h,i))));for(const e of i)this.#l.removeAllByServiceId(e),this.#u.removeAllByServiceId(e),this.#v.removeAllByServiceId(e);this.#p.clearCache()}async unload(...i){await Promise.all(i.map((i=>b(this.#h,i.id))));for(const e of i)this.#l.removeAllByModuleId(e.id),this.#u.removeAllByModuleId(e.id),this.#v.removeAllByModuleId(e.id);this.#p.clearCache()}#C(i){return{bind:e=>new D((i=>{this.#A(i)}),i,this.#S.defaultScope,e),isBound:this.isBound.bind(this),onActivation:(e,t)=>{this.#l.add(t,{moduleId:i,serviceId:e})},onDeactivation:(e,t)=>{this.#v.add(t,{moduleId:i,serviceId:e})},unbind:this.unbind.bind(this)}}#w(){return{getBindings:i=>this.#u.get(i),getBindingsFromModule:i=>this.#u.getByModuleId(i),getClassMetadata:r,getDeactivations:i=>this.#v.get(i)}}#O(i,e,t){return{isMultiple:i,name:t?.name,optional:t?.optional,serviceIdentifier:e,tag:t?.tag}}#F(i,e,t){const n={autobindOptions:t?.autobind??this.#S.autobind?{scope:this.#S.defaultScope}:void 0,getBindings:this.#b,getClassMetadata:r,rootConstraints:{isMultiple:e,serviceIdentifier:i},servicesBranch:[],setBinding:this.#m};return this.#j(n,t),n}#P(i,e,t){const n=this.#O(i,e,t),s=this.#p.get(n);if(void 0!==s)return s;const a=S(this.#F(e,i,t));return this.#p.set(n,a),a}#I(){return{get:this.get.bind(this),getAll:this.getAll.bind(this),getAllAsync:this.getAllAsync.bind(this),getAsync:this.getAsync.bind(this)}}#R(i){return p({context:this.#f,getActivations:this.#g,planResult:i,requestScopeCache:new Map})}#j(i,e){void 0!==e&&(void 0!==e.name&&(i.rootConstraints.name=e.name),!0===e.optional&&(i.rootConstraints.isOptional=!0),void 0!==e.tag&&(i.rootConstraints.tag={key:e.tag.key,value:e.tag.value}))}#B(i,e,t){if(void 0===e)return!1;const n={getAncestor:()=>{},name:t?.name,serviceIdentifier:i,tags:new Map};void 0!==t?.tag&&n.tags.set(t.tag.key,t.tag.value);for(const i of e)if(i.isSatisfiedBy(n))return!0;return!1}#M(){this.#p.clearCache(),this.#g=i=>this.#l.get(i),this.#b=this.#u.get.bind(this.#u),this.#f=this.#I(),this.#m=this.#A.bind(this)}#A(i){this.#u.set(i),this.#p.clearCache()}async#N(i){const e=this.#u.getById(i.id);await f(this.#h,e),this.#u.removeById(i.id),this.#p.clearCache()}async#x(i){await g(this.#h,i),this.#l.removeAllByServiceId(i),this.#u.removeAllByServiceId(i),this.#v.removeAllByServiceId(i),this.#p.clearCache()}}export{X as Container,y as ContainerModule,q as InversifyContainerError,L as InversifyContainerErrorKind};
//# sourceMappingURL=index.js.map
