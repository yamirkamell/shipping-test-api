import { ServiceIdentifier } from '@inversifyjs/common';
import { Cloneable } from '../../common/models/Cloneable';
import { BindingDeactivation } from '../models/BindingDeactivation';
declare enum DeactivationRelationKind {
    moduleId = "moduleId",
    serviceId = "serviceId"
}
export interface BindingDeactivationRelation {
    [DeactivationRelationKind.moduleId]?: number;
    [DeactivationRelationKind.serviceId]: ServiceIdentifier;
}
export declare class DeactivationsService implements Cloneable<DeactivationsService> {
    #private;
    private constructor();
    static build(parent: DeactivationsService | undefined): DeactivationsService;
    add(deactivation: BindingDeactivation, relation: BindingDeactivationRelation): void;
    clone(): DeactivationsService;
    get(serviceIdentifier: ServiceIdentifier): Iterable<BindingDeactivation> | undefined;
    removeAllByModuleId(moduleId: number): void;
    removeAllByServiceId(serviceId: ServiceIdentifier): void;
}
export {};
//# sourceMappingURL=DeactivationsService.d.ts.map