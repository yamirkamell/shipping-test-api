export interface SingleInmutableLinkedListNode<T> {
    elem: T;
    previous: SingleInmutableLinkedListNode<T> | undefined;
}
export declare class SingleInmutableLinkedList<T> implements Iterable<T> {
    readonly last: SingleInmutableLinkedListNode<T>;
    constructor(last: SingleInmutableLinkedListNode<T>);
    concat(elem: T): SingleInmutableLinkedList<T>;
    [Symbol.iterator](): Iterator<T>;
}
//# sourceMappingURL=SingleInmutableLinkedList.d.ts.map